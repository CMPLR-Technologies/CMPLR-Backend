{
    "openapi": "3.0.0",
    "info": {
        "title": "CMPLR API Documentation",
        "description": "Welcome to the CMPLR API Documentation!",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "CMPLR API Server"
        }
    ],
    "paths": {
        "/blog/{blog-identifier}/ask": {
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Ask A Blog",
                "description": "used to send a question to a blog",
                "operationId": "CreateAsk",
                "parameters": [
                    {
                        "name": "anonymously",
                        "in": "path",
                        "description": "whether to ask the question anonymously or to use the user info",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "question",
                        "in": "query",
                        "description": "the content of the question",
                        "required": true,
                        "schema": {
                            "type": "String"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Pass user credentials",
                                "required": [
                                    "question"
                                ],
                                "properties": {
                                    "anonymously": {
                                        "type": "Boolean",
                                        "format": "Boolean",
                                        "example": "true"
                                    },
                                    "question": {
                                        "type": "String",
                                        "format": "text",
                                        "example": "how are you?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/user/inbox": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "the user's inbox",
                "description": "Retrieve the all asks and  submissions",
                "operationId": "GetUserInbox",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_asks": {
                                                    "type": "Number",
                                                    "example": 263
                                                },
                                                "total_submissions": {
                                                    "type": "Number",
                                                    "example": 214
                                                },
                                                "asks": {
                                                    "description": "asks in user's inbox",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "ask_1": {
                                                                "description": "the first ask",
                                                                "type": "object"
                                                            },
                                                            "ask_2": {
                                                                "description": "the second ask",
                                                                "type": "object"
                                                            },
                                                            "ask_3": {
                                                                "description": "the third ask",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "submissions": {
                                                    "description": "submissions in user's inbox",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "sub_1": {
                                                                "description": "the first submission",
                                                                "type": "object"
                                                            },
                                                            "sub_2": {
                                                                "description": "the second submission",
                                                                "type": "object"
                                                            },
                                                            "sub_3": {
                                                                "description": "the third submission",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/inbox/{blog-identifier}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "blog's inbox",
                "description": "Retrieve the all asks and  submissions of a certain blog",
                "operationId": "GetBlogInbox",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_asks": {
                                                    "type": "Number",
                                                    "example": 263
                                                },
                                                "total_submissions": {
                                                    "type": "Number",
                                                    "example": 214
                                                },
                                                "asks": {
                                                    "description": "asks in user's inbox",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "ask_1": {
                                                                "description": "the first ask",
                                                                "type": "object"
                                                            },
                                                            "ask_2": {
                                                                "description": "the second ask",
                                                                "type": "object"
                                                            },
                                                            "ask_3": {
                                                                "description": "the third ask",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "submissions": {
                                                    "description": "submissions in user's inbox",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "sub_1": {
                                                                "description": "the first submission",
                                                                "type": "object"
                                                            },
                                                            "sub_2": {
                                                                "description": "the second submission",
                                                                "type": "object"
                                                            },
                                                            "sub_3": {
                                                                "description": "the third submission",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgot_password": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "forget password for existing user",
                "description": "User can reset password for existing email",
                "operationId": "forgetPassword",
                "responses": {
                    "200": {
                        "description": "Successfully redirect"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login for existing Email",
                "description": "User Login to his email ",
                "operationId": "Login",
                "parameters": [
                    {
                        "name": "Email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "Password",
                        "in": "query",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Password"
                                ],
                                "properties": {
                                    "Email": {
                                        "type": "email",
                                        "format": "email",
                                        "example": "tumblr.email@gmail.com"
                                    },
                                    "Password": {
                                        "type": "string",
                                        "format": "Password",
                                        "example": "pass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "UnAuthorized Access"
                    },
                    "200": {
                        "description": "Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "user"
                                    ],
                                    "properties": {
                                        "user": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "{user data}"
                                        },
                                        "token": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIzIiwianRpIjoiZTlmMWFiZTdhYjgyYzI2NzU4YTkxNzgzOWUzMTBhMDQwNWI0YzU5M2ZmNmJmNmQwZDA1MzQyZjczMTc2MGM1ZTFhYmFmMjc2MDYzOTE4MDAiLCJpYXQiOjE2MzcyNTM5NzEuMjY0ODQ1LCJuYmYiOjE2MzcyNTM5NzEuMjY0ODcxLCJleHAiOjE2Njg3ODk5NzEuMTMyNTE2LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.m9s768g6BZQN53a1RC1fhvAqWCLR9l_9Y6INMcqFa72KBfuxgUE5ach1QA0NzCrM8ZZOryQNvl7rhpuLsvSx3YuVQARt8VXTjqT_MfqRhwIy8Xl1M9LQ95tJtTt3Z0OPh2Uc1rbyUv4QjRSOf0hYjOpxE5N0Wpd1HcZ5FidM1jKvQUcXOkoE2HafcG9KLAE19_Lm7FcH1T4gsx7jsQ5ACfgEkFxr-w66JXcRa9jVLKbTnA2KENm6YJPiLsjmtnwadSThY2dOqvM7EYEk45P-bHU-OMxFwF7NFsNKSC9vC8cM1PN3cyzJISo0vK-OWMmx8qbcz9b36LK4ucoel1XhatvXGw_APzyqz1LC7vK6Ojesv2ipafV7MVFLNxmXorDmjyFWo7_2uH_Kb3atAocyAaf6B7Q9PnkyiVKoLikJDz6bncigsM3a3_m0lZey_ESUkBi2fz1blHkkNWnTr-phJxKBBvncyg6VrKJe2CugGZ2j4QWh4tFMEunpvIJWZ8h7niKEIi-kPLN5VbFtcqxIIM4YDZEtpik_2ghh-73NCPXi6gfzWLisszaUpGMgrltfU3isGsXZVSmseb2HBdQv9OA4Y5w9P4oHVMvKiOVyIv3r-SKNxm9c-Vfxzc26KqgP3mC_ZmtR-2l0xPTcWzm2_0pTXFfj5C_XYEqNL3ktLwc"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout from Email",
                "description": "User Logout from his email ",
                "operationId": "Logout",
                "responses": {
                    "200": {
                        "description": "Logout Successfully"
                    },
                    "401": {
                        "description": "UnAuthorized Access"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register to tumblr",
                "description": "User register to the website",
                "operationId": "Signup",
                "parameters": [
                    {
                        "name": "Email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "Password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "Blogname",
                        "in": "query",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Blogname"
                                ],
                                "properties": {
                                    "Email": {
                                        "type": "email",
                                        "format": "email",
                                        "example": "tumblr.email@gmail.com"
                                    },
                                    "Password": {
                                        "type": "string",
                                        "format": "Password",
                                        "example": "pass123"
                                    },
                                    "Blogname": {
                                        "type": "string",
                                        "format": "Password",
                                        "example": "Winter-is-comming"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registered Successfully"
                    },
                    "422": {
                        "description": "Invalid Data"
                    }
                }
            }
        },
        "/blog/{blog-identifier}/blocks": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Retrieve Blog's Block",
                "description": "Get the blogs that the requested blog is currently blocking. The requesting user must be an admin of the blog to retrieve this list.",
                "operationId": "getBlogBlocks",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "description": "Any blog identifier",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Block number to start at",
                        "required": false
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of blocks to retrieve, 1-20, inclusive",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "blocked_blogs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "john-doe"
                                                            },
                                                            "updated": {
                                                                "type": "number",
                                                                "example": 1308953007
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://www.cmplr.com/blogs/john-doe"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "<p><strong>Mr. Karp</strong> is tall and skinny, with unflinching blue eyes a mop of brown hair.\\r\\nHe speaks incredibly fast and in complete paragraphs.</p>"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "_links": {
                                                    "properties": {
                                                        "next": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string",
                                                                    "example": "/api/v1/blogs/john-doe/blocks?offset=20"
                                                                },
                                                                "method": {
                                                                    "type": "string",
                                                                    "example": "GET"
                                                                },
                                                                "query_params": {
                                                                    "properties": {
                                                                        "offset": {
                                                                            "type": "number",
                                                                            "example": 20
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Block a Blog",
                "description": "Block a blog by sending its identifier",
                "operationId": "blockBlog",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "description": "Your blog identifier",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "blocked_blog": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "john-doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Remove a Block",
                "description": "Remove a block by sending its identifier",
                "operationId": "unblockBlog",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "description": "Your blog identifier",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "blocked_blog": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "john-doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/messaging": {
            "get": {
                "tags": [
                    "Chats"
                ],
                "summary": "getting all messages",
                "description": "This method can be used to get all messages of authorized user",
                "operationId": "messaging",
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "blog-id_from": {
                                                    "type": "integer",
                                                    "example": 123154564
                                                },
                                                "blog-name_from": {
                                                    "type": "Sring",
                                                    "example": "summer-abdlhamid"
                                                },
                                                "blog-id_to": {
                                                    "type": "integer",
                                                    "example": 634344
                                                },
                                                "blog-name_to": {
                                                    "type": "Sring",
                                                    "example": "yousif-lasheen"
                                                },
                                                "content": {
                                                    "type": "Sring",
                                                    "example": "hello"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/messaging/conversation/{blog-id-from}/{blog-id-to}": {
            "get": {
                "tags": [
                    "Chats"
                ],
                "summary": "getting all messages from some blog",
                "description": "This method can be used to get all messages from some blog",
                "operationId": "conversation",
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "Successfully getting all messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Chats"
                ],
                "summary": "send message to blog",
                "description": "This method can be used to send message to blog",
                "operationId": "sendMessage",
                "parameters": [
                    {
                        "name": "Content",
                        "in": "query",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Content"
                                ],
                                "properties": {
                                    "Content": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "hello"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "Successfully sending messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Chats"
                ],
                "summary": "delete all messages with blog",
                "description": "This method can be used to send message to blog",
                "operationId": "destroy",
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "Successfully deleting messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/blog/{blog-identifier}/followed_by": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Check If Followed By Blog",
                "description": "This method can be used to check if one of your blogs is followed by another blog.",
                "operationId": "followedBy",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "followed_by": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/blog/{blog-identifier}/followers": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Retrieve a Blog's Followers",
                "description": "This method can be used to get the followers of a specific blog",
                "operationId": "getFollowers",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to return: 1–20",
                        "required": false
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Result to start at",
                        "required": false
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "blog-identifier"
                                ],
                                "properties": {
                                    "blog-identifier": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "summer_blog"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 1235
                                                },
                                                "Users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "david"
                                                            },
                                                            "following": {
                                                                "type": "Boolean",
                                                                "example": true
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://www.davidslog.com"
                                                            },
                                                            "updated": {
                                                                "type": "integer",
                                                                "example": 1308781073
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/blog/{blog-identifier}/following": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Retrieve Blog's following",
                "description": "This method can be used to retrieve the publicly exposed list of blogs that a blog follows, in order from most recently-followed to first.",
                "operationId": "getFollowing",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "description": "Any blog identifier",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Followed blog index to start at",
                        "required": false
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to retrieve, 1-20, inclusive",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_blogs": {
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "blogs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "john-doe"
                                                            },
                                                            "updated": {
                                                                "type": "number",
                                                                "example": 1308953007
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://www.cmplr.com/blogs/john-doe"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "<p><strong>Mr. Karp</strong> is tall and skinny, with unflinching blue eyes a mop of brown hair.\\r\\nHe speaks incredibly fast and in complete paragraphs.</p>"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "_links": {
                                                    "properties": {
                                                        "next": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string",
                                                                    "example": "/api/v1/blogs/john-doe/blocks?offset=20"
                                                                },
                                                                "method": {
                                                                    "type": "string",
                                                                    "example": "GET"
                                                                },
                                                                "query_params": {
                                                                    "properties": {
                                                                        "offset": {
                                                                            "type": "number",
                                                                            "example": 20
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/blog/{blog-identifier}/info": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Retrieve Blog Info",
                "description": "This method returns general information about the blog, such as the title, number of posts, and other high-level data.",
                "operationId": "getBlogInfo",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "description": "Any blog identifier",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": "https://www.example.com/image/avatar.png"
                                                },
                                                "posts": {
                                                    "type": "number",
                                                    "example": 69
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "john-doe"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://www.cmplr.com/blogs/john-doe"
                                                },
                                                "updated": {
                                                    "type": "number",
                                                    "example": 1308953007
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "<p><strong>Mr. Karp</strong> is tall and skinny, with unflinching blue eyes a mop of brown hair.\\r\\nHe speaks incredibly fast and in complete paragraphs.</p>"
                                                },
                                                "ask": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "ask_anon": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "likes": {
                                                    "type": "number",
                                                    "example": 420
                                                },
                                                "is_blocked_from_primary": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "theme": {
                                                    "properties": {
                                                        "avatar_shape": {
                                                            "type": "string",
                                                            "example": "circle"
                                                        },
                                                        "background_color": {
                                                            "type": "string",
                                                            "example": "#00f980"
                                                        },
                                                        "body_font": {
                                                            "type": "string",
                                                            "example": "Arial"
                                                        },
                                                        "header_image": {
                                                            "type": "string",
                                                            "example": "https://www.example.com/image/header.png"
                                                        },
                                                        "link_color": {
                                                            "type": "string",
                                                            "example": "#eefeef"
                                                        },
                                                        "show_avatar": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "show_description": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "show_header_image": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "show_title": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "title_color": {
                                                            "type": "string",
                                                            "example": "#f0f0f0"
                                                        },
                                                        "title_font": {
                                                            "type": "string",
                                                            "example": "Arial"
                                                        },
                                                        "title_font_weight": {
                                                            "type": "string",
                                                            "example": "bold"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog/{blog-identifier}/likes": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Retrieve Blog's Likes",
                "description": "This method can be used to retrieve the publicly exposed likes from a blog.",
                "operationId": "getBlogLikes",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "description": "Any blog identifier",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Block number to start at",
                        "required": false
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of blocks to retrieve, 1-20, inclusive",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "liked_posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "blog_name": {
                                                                "type": "string",
                                                                "example": "john-doe"
                                                            },
                                                            "blog_url": {
                                                                "type": "string",
                                                                "example": "https://www.cmplr.com/blogs/john-doe"
                                                            },
                                                            "post_id": {
                                                                "type": "number",
                                                                "example": "1234567890"
                                                            },
                                                            "post_notes_count": {
                                                                "type": "number",
                                                                "example": 20
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "liked_count": {
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "_links": {
                                                    "properties": {
                                                        "next": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string",
                                                                    "example": "/api/v1/blogs/john-doe/likes?offset=20"
                                                                },
                                                                "method": {
                                                                    "type": "string",
                                                                    "example": "GET"
                                                                },
                                                                "query_params": {
                                                                    "properties": {
                                                                        "offset": {
                                                                            "type": "number",
                                                                            "example": 20
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog/{Blog identifier}/settings/": {
            "get": {
                "tags": [
                    "BlogSetting"
                ],
                "summary": "Blog setting",
                "description": "Retrieve Blog Setting for User.",
                "operationId": "GEtBlogSetting",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "Blog_id": {
                                                    "type": "string/integer",
                                                    "example": "12135515"
                                                },
                                                "BlogName": {
                                                    "type": "string",
                                                    "example": "Summer Photos 2019"
                                                },
                                                "BlogTitle": {
                                                    "type": "string",
                                                    "example": "summer"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": "https://www.example.com/image/avatar.png"
                                                },
                                                "Replies": {
                                                    "type": "string",
                                                    "example": "Every can reply"
                                                },
                                                "Ask": {
                                                    "properties": {
                                                        "permit ask": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        },
                                                        "Ask page title": {
                                                            "type": "string",
                                                            "example": ""
                                                        },
                                                        "permit anonymous questions": {
                                                            "type": "Boolean",
                                                            "example": false
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Submissions": {
                                                    "properties": {
                                                        "permit submit": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        },
                                                        "Submissions page title": {
                                                            "type": "string",
                                                            "example": "Submit a post"
                                                        },
                                                        "Submissions guidelines": {
                                                            "type": "string",
                                                            "example": "Don't violate the community rules"
                                                        },
                                                        "is_text_allowed": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        },
                                                        "is_photo_allowed": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        },
                                                        "is_quote_allowed": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        },
                                                        "is_link_allowed": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        },
                                                        "is_video_allowed": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "permit Messaging": {
                                                    "type": "Boolean",
                                                    "example": true
                                                },
                                                "Protected": {
                                                    "type": "Boolean",
                                                    "example": false
                                                },
                                                "Visibility": {
                                                    "properties": {
                                                        "Dashboard_Hide": {
                                                            "type": "Boolean",
                                                            "example": false
                                                        },
                                                        "Search_Hide": {
                                                            "type": "Boolean",
                                                            "example": false
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Queue": {
                                                    "properties": {
                                                        "posts_per_day": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "Between": {
                                                            "type": "string",
                                                            "example": "12am,4pm"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/blog/{blog-identifier}/settings/save": {
            "put": {
                "tags": [
                    "BlogSetting"
                ],
                "summary": "save specific blog setting",
                "description": "user can save changes in one of its blogs",
                "operationId": "blogSettingSave",
                "parameters": [
                    {
                        "name": "Username",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "likes",
                        "in": "query",
                        "description": "make your likes public at blog_url",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "following",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Replies",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow_ask",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ask_page_title",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow_anonymous_questions",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "allow_submit_posts",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "submission_page_title",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "submission_guideline",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_text_allowed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_photo_allowed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_quote_allowed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_link_allowed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_video_allowed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "allow_messages",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "dashboard_hide",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search_hide",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Username": {
                                        "type": "string",
                                        "example": "ahmed-abdelhamed1"
                                    },
                                    "replies": {
                                        "type": "string",
                                        "example": "Everyone can reply"
                                    },
                                    "allow_ask": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "ask_page_title": {
                                        "type": "string",
                                        "example": "hello ask me whatever you want"
                                    },
                                    "allow_submit_posts": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "submission_guideline": {
                                        "type": "string",
                                        "example": "submissions should follow community standards"
                                    },
                                    "is_link_allowed": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_video_allowed": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 400
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "Bad Request"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/blog/{blog-identifier}/settings/theme": {
            "put": {
                "tags": [
                    "BlogSetting"
                ],
                "summary": "Edit blog theme",
                "description": "used to change the theme of a certain blog",
                "operationId": "EditBlogTheme",
                "parameters": [
                    {
                        "name": "header_image",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "avatar",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "avatar_shape",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "background_color",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "accent_color",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "show_header_image",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "stretch_header_image",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "show_avatar",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "show_title",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "show_description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "user_new_post_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "url_handling",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "layout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "sliding_header",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "show_navigation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "header_image": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "http://www.google.com/image"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "http://www.google.com/image"
                                    },
                                    "avatar_shape": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "triangle"
                                    },
                                    "background_color": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "red"
                                    },
                                    "accent_color": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "red"
                                    },
                                    "how_header_image": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "stretch_header_image": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "show_avatar": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "show_title": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "show_description": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "use_new_post_type": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "url_handling": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "layout": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "true"
                                    },
                                    "sliding_header": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "show_navigation": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/blog/{blog-identifier}/submit": {
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Submit a Post",
                "description": "Used to submit a post to a blog's inbox",
                "operationId": "submitPost",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "description": "Blog name of the person you want to submit a post to",
                        "required": true,
                        "schema": {
                            "type": "Boolean"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Pass user credentials",
                                "required": [
                                    "type",
                                    "content"
                                ],
                                "properties": {
                                    "fromBlogName": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "abdullah-alshawafi"
                                    },
                                    "fromBlogId": {
                                        "type": "integer",
                                        "format": "number",
                                        "example": "230"
                                    },
                                    "tags": {
                                        "type": "Boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Text"
                                    },
                                    "title": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "My Post"
                                    },
                                    "content": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "how are you?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/notifications": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Retrieve Blog's Activity Feed",
                "description": "Retrieve the activity items for a specific blog.",
                "operationId": "notifications",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "path",
                        "description": "Any blog identifier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Api Example : api.tumblr.com/v1/blog/{blog-identifier}/notifications <br/>\r\n     *    Available types include:\\n <br/>\r\n     *      all : get all notifications  <br/>\r\n     *      like:\tA like on your post <br/>\r\n     *      reply:\tA reply on your post <br/>\r\n     *      follow:\tA new follower <br/>\r\n     *      mention_in_reply:\tA mention of your blog in a reply <br/>\r\n     *      mention_in_post:\tA mention of your blog in a post <br/>\r\n     *      reblog_naked:\tA reblog of your post, without commentary <br/>\r\n     *      reblog_with_content:\tA reblog of your post, with commentary <br/>\r\n     *      ask:\tA new ask received <br/>\r\n     *      answered_ask:\tAn answered ask that you had sent <br/>\r\n     *      new_group_blog_member:\tA new member of your group blog <br/>\r\n     *      post_flagged:\tA post of yours being flagged <br/>\r\n     *      conversational_note\tA conversational note (reply, reblog with comment) on a post you're watching",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "all"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 1235
                                                },
                                                "notifications": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "example": "like"
                                                            },
                                                            "timestamp": {
                                                                "type": "integer",
                                                                "example": 1636069200
                                                            },
                                                            "targetBlogName": {
                                                                "type": "string",
                                                                "example": "ahmed-abdelhamed"
                                                            },
                                                            "targetBlog_id": {
                                                                "type": "string/integer",
                                                                "example": "t:nrXV2XvboWHMYIHJGCl"
                                                            },
                                                            "fromBlogName": {
                                                                "type": "string",
                                                                "example": "abdullah-alshawafi"
                                                            },
                                                            "fromBlogid": {
                                                                "type": "string/integer",
                                                                "example": "t:T7U1RijeZIfSsttMS7dYjw"
                                                            },
                                                            "targetPostId": {
                                                                "type": "integer",
                                                                "example": 666925284723982336
                                                            },
                                                            "targetPostSummary": {
                                                                "type": "string",
                                                                "example": "hi it is a very nice day"
                                                            },
                                                            "mediaUrl": {
                                                                "description": "return only one image of the post or none if not images",
                                                                "type": "string",
                                                                "example": "https://64.media.tumblr.com/e861484f7a4fce4e/63d1a2478316-bb/s75x7b91d6a7.jpg"
                                                            },
                                                            "reblogKey": {
                                                                "type": "string",
                                                                "example": "3bHZPzR2"
                                                            },
                                                            "addedText": {
                                                                "type": "string",
                                                                "example": ""
                                                            },
                                                            "is_anonymous": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "tags[]": {
                                                                "type": "string",
                                                                "example": "['winter','summer']"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "blog/blog_url/posts/?",
                "description": "user can get the posts published by certain blog",
                "operationId": "published_posts",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of post to return one of the following: text, quote, link, answer, video, audio, photo, chat",
                        "required": false
                    },
                    {
                        "name": "post_id",
                        "in": "query",
                        "description": "A specific post ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Limits the response to posts with the specified tag(s), see note below",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of posts to return",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reblog_info",
                        "in": "query",
                        "description": "Indicates whether to return reblog information",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "notes_info",
                        "in": "query",
                        "description": "Indicates whether to return notes information",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Indicates whether to return notes information default none",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "blog-identifier",
                                    "api_key"
                                ],
                                "properties": {
                                    "blog-identifier": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "summer_blog"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "text"
                                    },
                                    "tag": {
                                        "type": "string",
                                        "example": "summer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_no_posts": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "post_state": {
                                                                "type": "string",
                                                                "example": "published"
                                                            },
                                                            "post_id": {
                                                                "type": "integer",
                                                                "example": 13212313
                                                            },
                                                            "blog_id": {
                                                                "type": "integer",
                                                                "example": 123153
                                                            },
                                                            "blog_name": {
                                                                "type": "string",
                                                                "example": "summer"
                                                            },
                                                            "post_type": {
                                                                "type": "string",
                                                                "example": "text"
                                                            },
                                                            "content": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "firstName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "lastName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "companyId": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "accountNumber": {
                                                                            "type": "number",
                                                                            "example": ""
                                                                        },
                                                                        "netPay": {
                                                                            "type": "money",
                                                                            "example": ""
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    {
                                                                        "type": "text",
                                                                        "title": "hello",
                                                                        "text": "i am very tired of this"
                                                                    },
                                                                    {
                                                                        "type": "image",
                                                                        "image_url": "http://media.tumblr.com/b06fe71cc4ab47e93749df060ff54a90",
                                                                        "caption": "my image in cmp",
                                                                        "alt_text": "photo about friend taking a photo in university"
                                                                    },
                                                                    {
                                                                        "type": "link",
                                                                        "url": "https://www.youtube.com/watch?v=yn6ehJS9vv4",
                                                                        "title": "Secrecy Surrounding Senate Health Bill Raises Alarms in Both Parties",
                                                                        "description": "Senate leaders are writing legislation to repeal and replace the Affordable Care Act without a single hearing on the bill and without an open drafting session.",
                                                                        "site_name": "youtube"
                                                                    },
                                                                    {
                                                                        "type": "audio",
                                                                        "url": "https://media.tumblr.com/b06fe71cc4ab47e93749df060ff54a90/tumblr_nshp8oVOnV1rg0s9xo1.mp3",
                                                                        "provider": "soundcloud",
                                                                        "title": "believer",
                                                                        "artist(optional)": "imagine dragon",
                                                                        "album(optional)": "evolve",
                                                                        "description": "Senate leaders are writing legislation to repeal and replace the Affordable Care Act without a single hearing on the bill and without an open drafting session.",
                                                                        "site_name": "youtube"
                                                                    },
                                                                    {
                                                                        "type": "video",
                                                                        "url": "http://media.tumblr.com/b06fe71cc4ab47e93749df060ff54a90",
                                                                        "provider": "youtube"
                                                                    }
                                                                ]
                                                            },
                                                            "reblog_key": {
                                                                "type": "integer",
                                                                "example": 12553
                                                            },
                                                            "limit": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "parent_blog_id": {
                                                                "type": "integer",
                                                                "example": 12523
                                                            },
                                                            "parent_post_id": {
                                                                "type": "integer",
                                                                "example": 1223
                                                            },
                                                            "post_timestamp": {
                                                                "type": "integer",
                                                                "example": "15311351351"
                                                            },
                                                            "post_date": {
                                                                "type": "string",
                                                                "example": "01:01:11"
                                                            },
                                                            "format": {
                                                                "type": "string",
                                                                "example": "Rich text"
                                                            },
                                                            "blog_avatar": {
                                                                "type": "string",
                                                                "example": "http://media.tumblr.com/avatar/b06fe71cc4ab"
                                                            },
                                                            "number_notes": {
                                                                "type": "integer",
                                                                "example": 25
                                                            },
                                                            "layout": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "firstName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "lastName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "companyId": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "accountNumber": {
                                                                            "type": "number",
                                                                            "example": ""
                                                                        },
                                                                        "netPay": {
                                                                            "type": "money",
                                                                            "example": ""
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    {
                                                                        "type": "rows",
                                                                        "display": "[{blocks:[0,1]} , {blocks:[2]}]"
                                                                    }
                                                                ]
                                                            },
                                                            "tags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "firstName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "lastName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "companyId": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "accountNumber": {
                                                                            "type": "number",
                                                                            "example": ""
                                                                        },
                                                                        "netPay": {
                                                                            "type": "money",
                                                                            "example": ""
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    [
                                                                        "summer",
                                                                        "winter"
                                                                    ]
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "create new post",
                "operationId": "create",
                "parameters": [
                    {
                        "name": "content",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "Array"
                        }
                    },
                    {
                        "name": "layout",
                        "in": "query",
                        "description": "there are different types of layout for posts",
                        "required": false,
                        "schema": {
                            "type": "Array"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "the state of the post. Specify one of the following: published, draft, queue, private",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "publish_on",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Comma-separated tags for this post",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The GMT date and time of the post, as a string",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "source_url",
                        "in": "query",
                        "description": "A source attribution for the post content",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "Add a short text summary to the end of the post URL",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "is_private",
                        "in": "query",
                        "description": "Whether this should be a private answer, if this is an answer.",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "parent_tumnlrlog_uuid ",
                        "in": "query",
                        "description": "the unique public identifier of the tumblelog that’s being reblogged from",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "parent_post_id",
                        "in": "query",
                        "description": " the unique public post Id bing reblogged",
                        "required": false,
                        "schema": {
                            "type": "Integer"
                        }
                    },
                    {
                        "name": "hide_trail",
                        "in": "query",
                        "description": "whether or not to hide the reblog trail with this new post",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "exclide_tral_items",
                        "in": "query",
                        "description": "reblog trail items",
                        "required": false,
                        "schema": {
                            "type": "Array"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "Successfully Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 201
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "Created"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1234567891234567
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts/edit": {
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Edit existing Post",
                "operationId": "edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the ID of the post to edit",
                        "required": true,
                        "schema": {
                            "type": "Number"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "text",
                                        "example": "12546899"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "Successfully edited",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post/{post-id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "fetch a post for editing",
                "operationId": "edit",
                "parameters": [
                    {
                        "name": "post_fromat",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "String"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "successful post fetching",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "reponse": {
                                            "properties": {
                                                "object_type": {
                                                    "type": "String",
                                                    "example": "post"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "text"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "example": "2312145464"
                                                },
                                                "tumbllelog_uuid": {
                                                    "type": "string",
                                                    "example": "yousiflasheen"
                                                },
                                                "parent_tumnlelog_uuid": {
                                                    "type": "string",
                                                    "example": "john-abdelhamid"
                                                },
                                                "reblog_key": {
                                                    "type": "string",
                                                    "example": "2312145464"
                                                },
                                                "trail": {
                                                    "type": "string",
                                                    "example": "[, , ]"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "[hello everyboady]"
                                                },
                                                "layout": {
                                                    "type": "string",
                                                    "example": "[1 ,3]"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "edit posts with specific id",
                "operationId": "edit",
                "parameters": [
                    {
                        "name": "all request parameters from post creation route are expected",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "successful post fetching",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "reponse": {
                                            "properties": {
                                                "post_id": {
                                                    "type": "String",
                                                    "example": "1211464646"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts/queue": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "{blog-identifier}/Retrieve Queued Posts",
                "description": "user can get the posts that had been queued",
                "operationId": "Queued_posts",
                "parameters": [
                    {
                        "name": "Limit",
                        "in": "query",
                        "description": "The number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Specifies the post format to return(Html,MarkDown,Rich)",
                        "required": false
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Limit": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "filter": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Html"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_no_posts": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "post_state": {
                                                                "type": "string",
                                                                "example": "published"
                                                            },
                                                            "post_id": {
                                                                "type": "integer",
                                                                "example": 13212313
                                                            },
                                                            "blog_id": {
                                                                "type": "integer",
                                                                "example": 123153
                                                            },
                                                            "blog_name": {
                                                                "type": "string",
                                                                "example": "summer"
                                                            },
                                                            "post_type": {
                                                                "type": "string",
                                                                "example": "text"
                                                            },
                                                            "content": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "firstName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "lastName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "companyId": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "accountNumber": {
                                                                            "type": "number",
                                                                            "example": ""
                                                                        },
                                                                        "netPay": {
                                                                            "type": "money",
                                                                            "example": ""
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    {
                                                                        "type": "text",
                                                                        "title": "hello",
                                                                        "text": "i am very tired of this"
                                                                    },
                                                                    {
                                                                        "type": "image",
                                                                        "image_url": "http://media.tumblr.com/b06fe71cc4ab47e93749df060ff54a90",
                                                                        "caption": "my image in cmp",
                                                                        "alt_text": "photo about friend taking a photo in university"
                                                                    },
                                                                    {
                                                                        "type": "link",
                                                                        "url": "https://www.youtube.com/watch?v=yn6ehJS9vv4",
                                                                        "title": "Secrecy Surrounding Senate Health Bill Raises Alarms in Both Parties",
                                                                        "description": "Senate leaders are writing legislation to repeal and replace the Affordable Care Act without a single hearing on the bill and without an open drafting session.",
                                                                        "site_name": "youtube"
                                                                    },
                                                                    {
                                                                        "type": "audio",
                                                                        "url": "https://media.tumblr.com/b06fe71cc4ab47e93749df060ff54a90/tumblr_nshp8oVOnV1rg0s9xo1.mp3",
                                                                        "provider": "soundcloud",
                                                                        "title": "believer",
                                                                        "artist(optional)": "imagine dragon",
                                                                        "album(optional)": "evolve",
                                                                        "description": "Senate leaders are writing legislation to repeal and replace the Affordable Care Act without a single hearing on the bill and without an open drafting session.",
                                                                        "site_name": "youtube"
                                                                    },
                                                                    {
                                                                        "type": "video",
                                                                        "url": "http://media.tumblr.com/b06fe71cc4ab47e93749df060ff54a90",
                                                                        "provider": "youtube"
                                                                    }
                                                                ]
                                                            },
                                                            "reblog_key": {
                                                                "type": "integer",
                                                                "example": 12553
                                                            },
                                                            "limit": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "order_in_queue": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "parent_blog_id": {
                                                                "type": "integer",
                                                                "example": 12523
                                                            },
                                                            "parent_post_id": {
                                                                "type": "integer",
                                                                "example": 1223
                                                            },
                                                            "post_timestamp": {
                                                                "type": "integer",
                                                                "example": "15311351351"
                                                            },
                                                            "post_date": {
                                                                "type": "string",
                                                                "example": "01:01:11"
                                                            },
                                                            "format": {
                                                                "type": "string",
                                                                "example": "Rich text"
                                                            },
                                                            "blog_avatar": {
                                                                "type": "string",
                                                                "example": "http://media.tumblr.com/avatar/b06fe71cc4ab"
                                                            },
                                                            "number_notes": {
                                                                "type": "integer",
                                                                "example": 25
                                                            },
                                                            "layout": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "firstName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "lastName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "companyId": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "accountNumber": {
                                                                            "type": "number",
                                                                            "example": ""
                                                                        },
                                                                        "netPay": {
                                                                            "type": "money",
                                                                            "example": ""
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    {
                                                                        "type": "rows",
                                                                        "display": "[{blocks:[0,1]} , {blocks:[2]}]"
                                                                    }
                                                                ]
                                                            },
                                                            "tags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "firstName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "lastName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "companyId": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "accountNumber": {
                                                                            "type": "number",
                                                                            "example": ""
                                                                        },
                                                                        "netPay": {
                                                                            "type": "money",
                                                                            "example": ""
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    [
                                                                        "summer",
                                                                        "winter"
                                                                    ]
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/posts/queue/reorder": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "reorder a post within the queue",
                "operationId": "reorder queued posts",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string/integer"
                        }
                    },
                    {
                        "name": "insert_after",
                        "in": "query",
                        "description": "Which post ID to move it after, or 0 to make it the first post",
                        "required": false,
                        "schema": {
                            "type": "string/integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/posts/queue/shuffle": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "shuffle posts within the queue",
                "operationId": "shuffle queued posts",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/posts/draft": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "{blog-identifier}/posts/draft",
                "description": "user can get the draft posts",
                "operationId": "Drafted_posts",
                "parameters": [
                    {
                        "name": "before_id",
                        "in": "query",
                        "description": "Return posts that have appeared before this ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Specifies the post format to return(Html,MarkDown,Rich)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Limit": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "filter": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Markdown"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 1235
                                                },
                                                "Users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "david"
                                                            },
                                                            "following": {
                                                                "type": "Boolean",
                                                                "example": true
                                                            },
                                                            "Url": {
                                                                "type": "string",
                                                                "example": "https:www.davidslog.com"
                                                            },
                                                            "updated": {
                                                                "type": "integer",
                                                                "example": 1308781073
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/posts/submission": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "{blog-identifier}/posts/submission",
                "description": "retrieve submission posts",
                "operationId": "Submission_Posts",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Post number to start at",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Specifies the post format to return(Html,MarkDown,Rich)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Url Example: api.tumblr.com/v1/blog/{blog-identifier}/posts/submission",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "filter": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Markdown"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_no_posts": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "post_state": {
                                                                "type": "string",
                                                                "example": "published"
                                                            },
                                                            "post_id": {
                                                                "type": "integer",
                                                                "example": 13212313
                                                            },
                                                            "blog_id": {
                                                                "type": "integer",
                                                                "example": 123153
                                                            },
                                                            "blog_name": {
                                                                "type": "string",
                                                                "example": "summer"
                                                            },
                                                            "post_type": {
                                                                "type": "string",
                                                                "example": "text"
                                                            },
                                                            "content": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "firstName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "lastName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "companyId": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "accountNumber": {
                                                                            "type": "number",
                                                                            "example": ""
                                                                        },
                                                                        "netPay": {
                                                                            "type": "money",
                                                                            "example": ""
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    {
                                                                        "type": "text",
                                                                        "title": "hello",
                                                                        "text": "i am very tired of this"
                                                                    },
                                                                    {
                                                                        "type": "image",
                                                                        "image_url": "http://media.tumblr.com/b06fe71cc4ab47e93749df060ff54a90",
                                                                        "caption": "my image in cmp",
                                                                        "alt_text": "photo about friend taking a photo in university"
                                                                    },
                                                                    {
                                                                        "type": "link",
                                                                        "url": "https://www.youtube.com/watch?v=yn6ehJS9vv4",
                                                                        "title": "Secrecy Surrounding Senate Health Bill Raises Alarms in Both Parties",
                                                                        "description": "Senate leaders are writing legislation to repeal and replace the Affordable Care Act without a single hearing on the bill and without an open drafting session.",
                                                                        "site_name": "youtube"
                                                                    },
                                                                    {
                                                                        "type": "audio",
                                                                        "url": "https://media.tumblr.com/b06fe71cc4ab47e93749df060ff54a90/tumblr_nshp8oVOnV1rg0s9xo1.mp3",
                                                                        "provider": "soundcloud",
                                                                        "title": "believer",
                                                                        "artist(optional)": "imagine dragon",
                                                                        "album(optional)": "evolve",
                                                                        "description": "Senate leaders are writing legislation to repeal and replace the Affordable Care Act without a single hearing on the bill and without an open drafting session.",
                                                                        "site_name": "youtube"
                                                                    },
                                                                    {
                                                                        "type": "video",
                                                                        "url": "http://media.tumblr.com/b06fe71cc4ab47e93749df060ff54a90",
                                                                        "provider": "youtube"
                                                                    }
                                                                ]
                                                            },
                                                            "reblog_key": {
                                                                "type": "integer",
                                                                "example": 12553
                                                            },
                                                            "limit": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "parent_blog_id": {
                                                                "type": "integer",
                                                                "example": 12523
                                                            },
                                                            "parent_post_id": {
                                                                "type": "integer",
                                                                "example": 1223
                                                            },
                                                            "post_timestamp": {
                                                                "type": "integer",
                                                                "example": "15311351351"
                                                            },
                                                            "post_date": {
                                                                "type": "string",
                                                                "example": "01:01:11"
                                                            },
                                                            "format": {
                                                                "type": "string",
                                                                "example": "Rich text"
                                                            },
                                                            "blog_avatar": {
                                                                "type": "string",
                                                                "example": "http://media.tumblr.com/avatar/b06fe71cc4ab"
                                                            },
                                                            "number_notes": {
                                                                "type": "integer",
                                                                "example": 25
                                                            },
                                                            "layout": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "firstName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "lastName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "companyId": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "accountNumber": {
                                                                            "type": "number",
                                                                            "example": ""
                                                                        },
                                                                        "netPay": {
                                                                            "type": "money",
                                                                            "example": ""
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    {
                                                                        "type": "rows",
                                                                        "display": "[{blocks:[0,1]} , {blocks:[2]}]"
                                                                    }
                                                                ]
                                                            },
                                                            "tags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "firstName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "lastName": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "companyId": {
                                                                            "type": "string",
                                                                            "example": ""
                                                                        },
                                                                        "accountNumber": {
                                                                            "type": "number",
                                                                            "example": ""
                                                                        },
                                                                        "netPay": {
                                                                            "type": "money",
                                                                            "example": ""
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    [
                                                                        "summer",
                                                                        "winter"
                                                                    ]
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/post/delete": {
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "delete existing post",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "Number"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/posts/reblog": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Reblog existing Post",
                "operationId": "reblog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the ID of the reblogged post",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reblog_key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "comment added to the reblogged post",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "native_inline_images",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "Successfully Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 201
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "Created"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/post/notes": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "getting notes for specific post",
                "description": "This method can be used to get notes for specific post",
                "operationId": "getNotes",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "before_timestamp",
                        "in": "query",
                        "description": "Fetch notes created before this timestamp",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "The response formatting mode {all , likes , conversation , rollup ,reblogs_with_tags }",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "Number",
                                        "format": "text",
                                        "example": "1234567890000"
                                    },
                                    "before_timestamp": {
                                        "type": "Number",
                                        "format": "text",
                                        "example": "1234567890"
                                    },
                                    "mode": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "all"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 1235
                                                },
                                                "Users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "notes": {
                                                                "type": "Array"
                                                            },
                                                            "rollup_notes": {
                                                                "type": "Array"
                                                            },
                                                            "total_notes": {
                                                                "type": "Number",
                                                                "example": 125
                                                            },
                                                            "total_likes": {
                                                                "type": "Number",
                                                                "example": 12
                                                            },
                                                            "_links": {
                                                                "type": "Object",
                                                                "example": "http/...."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tagged": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get Posts with Tag",
                "description": "retrieve the posts with specific tag",
                "operationId": "getTaggedPosts",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "The tag on the posts you'd like to retrieve",
                        "required": true,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "The timestamp of when you'd like to see posts before.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "the number of posts to return",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Specifies the post format to return, other than HTML: text – Plain text, no HTML; raw – As entered by the user (no post-processing)",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tag"
                                ],
                                "properties": {
                                    "tag": {
                                        "type": "String",
                                        "format": "text",
                                        "example": "anime"
                                    },
                                    "before": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 10
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "filter": {
                                        "type": "String",
                                        "format": "text",
                                        "example": "HTML"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "blog": {
                                                    "type": "object"
                                                },
                                                "posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "post1": {
                                                                "description": "the first post",
                                                                "type": "object"
                                                            },
                                                            "post2": {
                                                                "description": "the second post",
                                                                "type": "object"
                                                            },
                                                            "post3": {
                                                                "description": "the third post",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total_posts": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog": {
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Create new Blog",
                "description": "User create new Blog ",
                "operationId": "Create",
                "parameters": [
                    {
                        "name": "Title",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "Url",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "Privacy",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "Password",
                        "in": "query",
                        "required": false
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Title"
                                ],
                                "properties": {
                                    "Title": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Summer_Blog"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "example.tumblr.com"
                                    },
                                    "Privacy": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "Password": {
                                        "type": "string",
                                        "format": "Password",
                                        "example": "pass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created Successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Invalid Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Blog url is not available!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Delete Specific Blog",
                "description": "User Delete Specific Blog ",
                "operationId": "Delete",
                "parameters": [
                    {
                        "name": "Email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "Password",
                        "in": "query",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Email",
                                    "Password"
                                ],
                                "properties": {
                                    "Email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "Email@gmail.com"
                                    },
                                    "Password": {
                                        "type": "string",
                                        "format": "Password",
                                        "example": "Password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "That password is incorrect. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/follow": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Follow a blog",
                "description": "enable the user to follow a blog using the blog Email or URL",
                "operationId": "UserFollow",
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "the url of the blog to follow",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email of the blog to follow",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url",
                                    "email"
                                ],
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "http://wwww.something.com"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "name@something.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/user/unfollow": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Unfollow a blog",
                "description": "enable the user to Unfollow a blog using the blog URL",
                "operationId": "UserUnfollow",
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "the url of the blog to unfollow",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url"
                                ],
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "http://wwww.something.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": " retrieving the user’s account information ",
                "description": "This method can be used to  retrieve the user’s account information that matches the OAuth credentials submitted with the request",
                "operationId": "index",
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "following": {
                                                    "type": "Number",
                                                    "example": 263
                                                },
                                                "default_post_format": {
                                                    "description": "html, markdown, or raw",
                                                    "type": "String",
                                                    "example": "html"
                                                },
                                                "name": {
                                                    "description": "The user's tumblr short name",
                                                    "type": "String",
                                                    "example": "derekg"
                                                },
                                                "likes": {
                                                    "description": "The total count of the user's likes",
                                                    "type": "Number",
                                                    "example": 606
                                                },
                                                "blogs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "description": "the short name of the blog",
                                                                "type": "String",
                                                                "example": "derekg"
                                                            },
                                                            "url": {
                                                                "description": "the URL of the blog",
                                                                "type": "String",
                                                                "example": "https://derekg.org/"
                                                            },
                                                            "title": {
                                                                "description": "the title of the blog",
                                                                "type": "String",
                                                                "example": "Derek Gottfrid"
                                                            },
                                                            "primary": {
                                                                "description": "indicates if this is the user's primary blog",
                                                                "type": "Boolean",
                                                                "example": true
                                                            },
                                                            "followers": {
                                                                "description": "total count of followers for this blog",
                                                                "type": "Number",
                                                                "example": 33004929
                                                            },
                                                            "tweet": {
                                                                "description": "indicate if posts are tweeted auto, Y, N",
                                                                "type": "String",
                                                                "example": "Y"
                                                            },
                                                            "facebook": {
                                                                "description": "indicate if posts are sent to facebook Y, N",
                                                                "type": "String",
                                                                "example": "auto"
                                                            },
                                                            "type": {
                                                                "description": "indicates whether a blog is public or private",
                                                                "type": "String",
                                                                "example": "public"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/dashboard": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": " retrieving the user’s dashboard",
                "description": "This method can be used to  retrieve the user’s dashboard that matches the OAuth credentials submitted with the request",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to return: 1–20, inclusive",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Post number to start at",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of post to return. Specify one of the following: text, photo, quote, link, chat, audio, video, answer",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "since_id",
                        "in": "query",
                        "description": "Return posts that have appeared after this ID; Use this parameter to page through the results: first get a set of posts, and then get posts since the last ID of the previous set.",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "reblog_info",
                        "in": "query",
                        "description": "Indicates whether to return reblog information (specify true or false). Returns the various reblogged_ fields.",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "notes_info",
                        "in": "query",
                        "description": "Indicates whether to return notes information (specify true or false). Returns note count and note metadata.",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "blog_name": {
                                                                "type": "string",
                                                                "example": "laughingsquid"
                                                            },
                                                            "id": {
                                                                "type": "Number",
                                                                "example": 6828225215
                                                            },
                                                            "post_url": {
                                                                "type": "string",
                                                                "example": "https:\\/\\/links.laughingsquid.com\\/post\\/6828225215"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/likes": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve a User's Likes",
                "description": "retrieve the posts liked by the user",
                "operationId": "getUserLikes",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "the number of posts to return",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The number of the liked post to start from",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Retrieve posts liked before the specified timestamp",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Retrieve posts liked after the specified timestamp",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "limit": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "offset": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "before": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "after": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_posts": {
                                                    "type": "Number",
                                                    "example": 263
                                                },
                                                "posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "post1": {
                                                                "description": "the first post",
                                                                "type": "object"
                                                            },
                                                            "post2": {
                                                                "description": "the second post",
                                                                "type": "object"
                                                            },
                                                            "post3": {
                                                                "description": "the third post",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/following": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve the Blogs a User Is Following",
                "description": "Used to return the blogs followed by the user, and info about those blogs.",
                "operationId": "getUserFollowing",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "the number of blogs to return",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The number of the post to start from",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "limit": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "offset": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_blogs": {
                                                    "type": "Number",
                                                    "example": 263
                                                },
                                                "blogs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "blog1": {
                                                                "description": "the first blog",
                                                                "type": "object"
                                                            },
                                                            "blog2": {
                                                                "description": "the second blog",
                                                                "type": "object"
                                                            },
                                                            "blog3": {
                                                                "description": "the third blog",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/filtered_tags": {
            "get": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "Retrieve Tag Filtering",
                "description": "Retrieve a list of currently-filtered tag strings.",
                "operationId": "UserGetFilteredTags",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "filtered_tags": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "tag1": {
                                                        "type": "string",
                                                        "example": "techonolgy"
                                                    },
                                                    "tag2": {
                                                        "type": "string",
                                                        "example": "something"
                                                    },
                                                    "tag3": {
                                                        "type": "string",
                                                        "example": "something else"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "Add Tag Filtering",
                "description": "Add one or more tags to filter.",
                "operationId": "UserPostFilterTag",
                "parameters": [
                    {
                        "name": "filtered_tags",
                        "in": "query",
                        "description": "One or more than one tag string to add to your list of filters",
                        "required": true,
                        "schema": {
                            "type": "array of strings"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "filtered_tags"
                                ],
                                "properties": {
                                    "filtered_tags": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "tag1": {
                                                    "type": "string",
                                                    "example": "techonolgy"
                                                },
                                                "tag2": {
                                                    "type": "string",
                                                    "example": "something"
                                                },
                                                "tag3": {
                                                    "type": "string",
                                                    "example": "something else"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/user/filtered_tags/{tag}": {
            "delete": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "Remove Tag Filtering",
                "description": "Remove a tag filter.",
                "operationId": "UserDeleteFilteringTag",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "Tag to stop filtering",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tag"
                                ],
                                "properties": {
                                    "tag": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "football"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/user/filtered_content": {
            "get": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "Retrieve Content Filtering",
                "description": "Retrieve a list of currently-filtered content strings.",
                "operationId": "UserGetFilteredContent",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "": {
                                            "properties": {
                                                "filtered_content": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "tag1_content": {
                                                                "example": "technology"
                                                            },
                                                            "tag2_content": {
                                                                "example": "something"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "Add Content Filtering",
                "description": "Add one or more content strings to filter.",
                "operationId": "UserPostFilteringContent",
                "parameters": [
                    {
                        "name": "filtered_content",
                        "in": "query",
                        "description": "One or more than one string to add to your list of filters",
                        "required": true,
                        "schema": {
                            "type": "array of strings"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "filtered_content"
                                ],
                                "properties": {
                                    "filtered_tags": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "tag1": {
                                                    "type": "string",
                                                    "example": "techonolgy"
                                                },
                                                "tag2": {
                                                    "type": "string",
                                                    "example": "something"
                                                },
                                                "tag3": {
                                                    "type": "string",
                                                    "example": "something else"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "Remove filtered_content",
                "description": "rRemove a content filter string.",
                "operationId": "UserDeleteFilteringContent",
                "parameters": [
                    {
                        "name": "filtered_content",
                        "in": "path",
                        "description": "Content filter string to remove.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "filtered_content"
                                ],
                                "properties": {
                                    "filtered_content": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "hello_filter"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/{blog-identifier}/notes/delete": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a note from a post",
                "operationId": "deleteNote",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "note_tumblelog",
                        "in": "query",
                        "description": "the name of blog containing post",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog/{blog-identifier}/subscription": {
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "subscription a blog",
                "operationId": "subscription",
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Blogs"
                ],
                "summary": "subscription a blog",
                "operationId": "Unsubscription",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/{blog-identifier}/add_tags_to_posts": {
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "add new tag(s) to existing post(s)",
                "operationId": "Add Tags to Posts",
                "parameters": [
                    {
                        "name": "posts_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "tag[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/{blog-identifier}/delete_posts": {
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "user can delete one or more posts",
                "operationId": "DeletePosts",
                "parameters": [
                    {
                        "name": "posts_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer/string"
                            }
                        }
                    },
                    {
                        "name": "tags[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "posts_id[]",
                                    "tags[]"
                                ],
                                "properties": {
                                    "posts_id[]": {
                                        "type": "string",
                                        "example": "[1123153153,153151312]"
                                    },
                                    "tags[]": {
                                        "type": "string",
                                        "example": "['winter','153151312']"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/{blog-identifier}/get_tags_for_posts": {
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "get all tag(s) existing in post(s)",
                "operationId": "get_tags_for_posts",
                "parameters": [
                    {
                        "name": "posts_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string/integer"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "posts_id[]"
                                ],
                                "properties": {
                                    "posts_id[]": {
                                        "type": "string",
                                        "example": "[1123153153,153151312]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "number of tags": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "posts_id[]": {
                                                    "type": "string",
                                                    "example": "['summer','sunny','beach'd]"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/{blog-identifier}/remove_tags_from_posts": {
            "delete": {
                "tags": [
                    "Blogs"
                ],
                "summary": "remove tag(s) existing in post(s)",
                "operationId": "remove_tags_from_posts",
                "parameters": [
                    {
                        "name": "posts_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string/integer"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "posts_id[]"
                                ],
                                "properties": {
                                    "posts_id[]": {
                                        "type": "string",
                                        "example": "[1123153153,153151312]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/like": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Like a Post",
                "description": "enables the user to like a post through the post id",
                "operationId": "UserLike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the post to like",
                        "required": true,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "reblog_key",
                        "in": "query",
                        "description": "The reblog key for the post id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "reblog_key"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "reblog_key": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "hello123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/unlike": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Unlike a Post",
                "description": "enables the user to unlike a post through the post id",
                "operationId": "UserUnlike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the post to unlike",
                        "required": true,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "reblog_key",
                        "in": "query",
                        "description": "The reblog key for the post id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "reblog_key"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "reblog_key": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "hello123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/post/reply": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "add new reply to Specific Post",
                "operationId": "add reply",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reblog_key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reply_text",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "tumblelog",
                        "in": "query",
                        "description": "the name of blog containing post to get if he is the original poster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "201": {
                        "description": "created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/settings/account": {
            "get": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "User setting",
                "description": "Retrieve Account Setting for User.",
                "operationId": "accountSettings",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "email": {
                                                    "type": "string",
                                                    "example": "example@gmail.com"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "password123"
                                                },
                                                "google_login": {
                                                    "type": "Boolean",
                                                    "example": false
                                                },
                                                "account_activity": {
                                                    "type": "Boolean",
                                                    "example": true
                                                },
                                                "two-factor_authentication": {
                                                    "type": "Boolean",
                                                    "example": false
                                                },
                                                "filtering_tags": {
                                                    "type": "string",
                                                    "example": "summer,winter,sunny"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/settings/account/delete": {
            "delete": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "Delete User Account",
                "description": "This method is used to delete the account of the authenticated user.",
                "operationId": "deleteAccount",
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/settings/notifications": {
            "post": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "Retrieve Notifications Setting for User.",
                "operationId": "get_notification_setting",
                "responses": {
                    "200": {
                        "description": "Url Example: api.tumblr.com/v2/settings/notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "blogs": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "Blog_name": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "blog_id": {
                                                        "type": "integer"
                                                    },
                                                    "blog_title": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "blog_avatar": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "email_about_new_follower": {
                                                        "type": "boolean",
                                                        "example": ""
                                                    },
                                                    "email_about_new_replies": {
                                                        "type": "boolean",
                                                        "example": ""
                                                    },
                                                    "email_about_new_submissions": {
                                                        "type": "boolean",
                                                        "example": ""
                                                    },
                                                    "email_about_mentions": {
                                                        "type": "boolean",
                                                        "example": ""
                                                    },
                                                    "email_about_new_asks": {
                                                        "type": "boolean",
                                                        "example": ""
                                                    },
                                                    "notify_form": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "applly_to_all_blogs": {
                                                        "type": "boolean",
                                                        "example": ""
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": [
                                                {
                                                    "Blog_name": "summer memories",
                                                    "blog_id": 13515315315,
                                                    "blog_title": "summer22",
                                                    "blog_avatar": "https://www.example.com/image/avatar.png",
                                                    "email_about_new_follower": true,
                                                    "email_about_new_replies": true,
                                                    "email_about_new_submissions": true,
                                                    "email_about_mentions": true,
                                                    "email_about_new_asks": true,
                                                    "notify_form": "from everyone",
                                                    "applly_to_all_blogs": false
                                                },
                                                {
                                                    "Blog_name": "summer memories 2 ",
                                                    "blog_id": 13515315314,
                                                    "blog_title": "summer21",
                                                    "blog_avatar": "https://www.example.com/image/avatar.png",
                                                    "email_about_new_follower": false,
                                                    "email_about_new_replies": true,
                                                    "email_about_new_submissions": true,
                                                    "email_about_mentions": false,
                                                    "email_about_new_asks": true,
                                                    "notify_form": "from people you follow",
                                                    "applly_to_all_blogs": false
                                                }
                                            ]
                                        },
                                        "tumblr_news": {
                                            "type": "Boolean",
                                            "example": true
                                        },
                                        "conversational_notifications": {
                                            "type": "Boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/settings/dashboard": {
            "get": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "User dashboard setting",
                "description": "Retrieve DashBoard Setting for User.",
                "operationId": "GEtDashBoardSetting",
                "responses": {
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "interface": {
                                                    "properties": {
                                                        "enable_endless_scrolling": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        },
                                                        "show_badge": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "text_editor": {
                                                    "type": "string",
                                                    "example": "Rich text editor"
                                                },
                                                "message sounds": {
                                                    "type": "Boolean",
                                                    "example": true
                                                },
                                                "preferences": {
                                                    "properties": {
                                                        "Include followed tag posts": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        },
                                                        "best_stuff__first": {
                                                            "type": "Boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/setting/account/save": {
            "put": {
                "tags": [
                    "UserSettings"
                ],
                "summary": "{blog-identifier}/posts/draft",
                "description": "user can get the draft posts",
                "operationId": "Drafted_posts",
                "parameters": [
                    {
                        "name": "new_email",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "current_confirm_password",
                        "in": "query",
                        "description": "used as confirm_password for change accout email or current password for change password",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "new_password",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "google_login",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "account_activity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "two-factor_authentication",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filtered tags",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "winter,summer"
                    },
                    {
                        "name": "filtered post_content",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enable_endless_scrolling",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "show_badge",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "text_editor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "message sounds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "best_stuff_first",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "include_followed_tags_posts",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "tumblr_news",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "conversation_notifications",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "new_example@gmail.com"
                                    },
                                    "current_confirm_password": {
                                        "type": "string",
                                        "example": "new_pass123"
                                    },
                                    "account_activity": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "two_factor_authentication": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "namea": {
                                        "type": "string",
                                        "example": "ahmed"
                                    },
                                    "Text Editor": {
                                        "type": "string",
                                        "example": "Rich text editor"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/tags/add": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "follow new tag",
                "operationId": "follow tag",
                "parameters": [
                    {
                        "name": "tag_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/tags/remove": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "unfollow tag",
                "operationId": "unfollow tag",
                "parameters": [
                    {
                        "name": "tag_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        []
    ]
}