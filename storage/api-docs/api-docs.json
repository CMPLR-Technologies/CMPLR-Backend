{
    "openapi": "3.0.0",
    "info": {
        "title": "Tumblr Api Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "Blog/{blog-identifier}/followed_by": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "blog/Followed_by",
                "description": "This method can be used to check if one of your blogs is followed by another blog",
                "operationId": "Followed_by",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "query",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "blog-identifier"
                                ],
                                "properties": {
                                    "blog-identifier": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "summer_blog"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "OK"
                                        },
                                        "response": {
                                            "type": "string",
                                            "example": "{followed_by : false}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "blog/{blog-identifier}/followers": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "blog/follows",
                "description": "This method can be used to get followers for specific Blog",
                "operationId": "followers",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to return: 1â€“20",
                        "required": false
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Result to start at",
                        "required": false
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "blog-identifier"
                                ],
                                "properties": {
                                    "blog-identifier": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "summer_blog"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 1235
                                                },
                                                "Users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "david"
                                                            },
                                                            "following": {
                                                                "type": "Boolean",
                                                                "example": true
                                                            },
                                                            "Url": {
                                                                "type": "string",
                                                                "example": "https:www.davidslog.com"
                                                            },
                                                            "updated": {
                                                                "type": "integer",
                                                                "example": 1308781073
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "blog/blog_url/posts/?",
                "description": "user can get the posts published by certain blog",
                "operationId": "published_posts",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Your OAuth Consumer Key",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of post to return one of the following: text, quote, link, answer, video, audio, photo, chat",
                        "required": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A specific post ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "tag[]",
                        "in": "query",
                        "description": "Limits the response to posts with all these specified tag(s),",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of posts to return",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reblog_info",
                        "in": "query",
                        "description": "Indicates whether to return reblog information",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "notes_info",
                        "in": "query",
                        "description": "Indicates whether to return notes information",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Indicates whether to return notes information default none",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "blog-identifier",
                                    "api_key"
                                ],
                                "properties": {
                                    "blog-identifier": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "summer_blog"
                                    },
                                    "api_key": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "??!"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "text"
                                    },
                                    "tag": {
                                        "type": "string",
                                        "example": "summer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 1235
                                                },
                                                "Users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "david"
                                                            },
                                                            "following": {
                                                                "type": "Boolean",
                                                                "example": true
                                                            },
                                                            "Url": {
                                                                "type": "string",
                                                                "example": "https:www.davidslog.com"
                                                            },
                                                            "updated": {
                                                                "type": "integer",
                                                                "example": 1308781073
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "posts"
                ],
                "summary": "create new post",
                "operationId": "create",
                "parameters": [
                    {
                        "name": "content",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "Array"
                        }
                    },
                    {
                        "name": "layout",
                        "in": "query",
                        "description": "there are different types of layout for posts",
                        "required": false,
                        "schema": {
                            "type": "Array"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "the state of the post. Specify one of the following: published, draft, queue, private",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "publish_on",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Comma-separated tags for this post",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The GMT date and time of the post, as a string",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "source_url",
                        "in": "query",
                        "description": "A source attribution for the post content",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "Add a short text summary to the end of the post URL",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "send_to_twitter",
                        "in": "query",
                        "description": "Whether or not to share this via any connected Twitter account on post publish",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "is_private",
                        "in": "query",
                        "description": "Whether this should be a private answer, if this is an answer.",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "send_to_facebook",
                        "in": "query",
                        "description": "Whether or not to share this via any connected Facebook account on post publish",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "parent_tumnlrlog_uuid ",
                        "in": "query",
                        "description": "the unique public identifier of the tumblelog thatâ€™s being reblogged from",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "parent_post_id",
                        "in": "query",
                        "description": " the unique public post Id bing reblogged",
                        "required": false,
                        "schema": {
                            "type": "Integer"
                        }
                    },
                    {
                        "name": "hide_trail",
                        "in": "query",
                        "description": "whether or not to hide the reblog trail with this new post",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "exclide_tral_items",
                        "in": "query",
                        "description": "reblog trail items",
                        "required": false,
                        "schema": {
                            "type": "Array"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "Successfully Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 201
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "Created"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1234567891234567
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts/edit": {
            "put": {
                "tags": [
                    "posts"
                ],
                "summary": "Edit existing Post",
                "operationId": "edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the ID of the post to edit",
                        "required": true,
                        "schema": {
                            "type": "Number"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "text",
                                        "example": "12546899"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "Successfully edited",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post/{post-id}": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "fetch a post for editing",
                "operationId": "edit",
                "parameters": [
                    {
                        "name": "post_fromat",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "String"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "successful post fetching",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "reponse": {
                                            "properties": {
                                                "object_type": {
                                                    "type": "String",
                                                    "example": "post"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "text"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "example": "2312145464"
                                                },
                                                "tumbllelog_uuid": {
                                                    "type": "string",
                                                    "example": "yousiflasheen"
                                                },
                                                "parent_tumnlelog_uuid": {
                                                    "type": "string",
                                                    "example": "john-abdelhamid"
                                                },
                                                "reblog_key": {
                                                    "type": "string",
                                                    "example": "2312145464"
                                                },
                                                "trail": {
                                                    "type": "string",
                                                    "example": "[, , ]"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "[hello everyboady]"
                                                },
                                                "layout": {
                                                    "type": "string",
                                                    "example": "[1 ,3]"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "posts"
                ],
                "summary": "edit posts with specific id",
                "operationId": "edit",
                "parameters": [
                    {
                        "name": "all request parameters from post creation route are expected",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "successful post fetching",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "reponse": {
                                            "properties": {
                                                "post_id": {
                                                    "type": "String",
                                                    "example": "1211464646"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts/queue": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "{blog-identifier}/Retrieve Queued Posts",
                "description": "user can get the posts that had been queued",
                "operationId": "Queued_posts",
                "parameters": [
                    {
                        "name": "Limit",
                        "in": "query",
                        "description": "The number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Specifies the post format to return(Html,MarkDown,Rich)",
                        "required": false
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Limit": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "filter": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Html"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 1235
                                                },
                                                "Users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "david"
                                                            },
                                                            "following": {
                                                                "type": "Boolean",
                                                                "example": true
                                                            },
                                                            "Url": {
                                                                "type": "string",
                                                                "example": "https:www.davidslog.com"
                                                            },
                                                            "updated": {
                                                                "type": "integer",
                                                                "example": 1308781073
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts/queue/reorder": {
            "post": {
                "tags": [
                    "posts"
                ],
                "summary": "reorder a post within the queue",
                "operationId": "reorder queued posts",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string/integer"
                        }
                    },
                    {
                        "name": "insert_after",
                        "in": "query",
                        "description": "Which post ID to move it after, or 0 to make it the first post",
                        "required": false,
                        "schema": {
                            "type": "string/integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/posts/queue/shuffle": {
            "post": {
                "tags": [
                    "posts"
                ],
                "summary": "shuffle posts within the queue",
                "operationId": "shuffle queued posts",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/posts/draft": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "{blog-identifier}/posts/draft",
                "description": "user can get the draft posts",
                "operationId": "Drafted_posts",
                "parameters": [
                    {
                        "name": "before_id",
                        "in": "query",
                        "description": "Return posts that have appeared before this ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Specifies the post format to return(Html,MarkDown,Rich)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Limit": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "filter": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Markdown"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 1235
                                                },
                                                "Users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "david"
                                                            },
                                                            "following": {
                                                                "type": "Boolean",
                                                                "example": true
                                                            },
                                                            "Url": {
                                                                "type": "string",
                                                                "example": "https:www.davidslog.com"
                                                            },
                                                            "updated": {
                                                                "type": "integer",
                                                                "example": 1308781073
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts/submission": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "{blog-identifier}/posts/submission",
                "description": "retrieve submission posts",
                "operationId": "Submission_Posts",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Post number to start at",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Specifies the post format to return(Html,MarkDown,Rich)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Url Example: api.tumblr.com/v1/blog/{blog-identifier}/posts/submission",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "filter": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Markdown"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "sucess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "id": {
                                                    "description": "The ID of the submitted post",
                                                    "type": "string/integer",
                                                    "example": 12351312
                                                },
                                                "post_url": {
                                                    "description": "The location of the post",
                                                    "type": "string",
                                                    "example": "https://ahmed-abdelhamed.tumblr.com/post/66686750959666/hajsdfhks"
                                                },
                                                "slug": {
                                                    "description": "Short text summary to the end of the post URL",
                                                    "type": "string",
                                                    "example": "hajsdfhks"
                                                },
                                                "type": {
                                                    "description": "The type of post. One of the following: text, photo, quote, link, video",
                                                    "type": "string",
                                                    "example": "text"
                                                },
                                                "date": {
                                                    "description": "The GMT date and time of the post",
                                                    "type": "string",
                                                    "example": "YYYY-DD-MM HH:MM:SS"
                                                },
                                                "timestamp": {
                                                    "description": "The time of the post, in seconds since the epoch",
                                                    "type": "integer",
                                                    "example": "1635865720"
                                                },
                                                "state": {
                                                    "description": "Indicates the current state of the post (submission)",
                                                    "type": "string",
                                                    "example": "submission"
                                                },
                                                "format": {
                                                    "description": "Format type of post.",
                                                    "type": "String",
                                                    "example": "Html"
                                                },
                                                "reblog_key": {
                                                    "description": "The reblog key for the post",
                                                    "type": "string",
                                                    "example": "HNvqLd5G"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "example": [
                                                            "winter",
                                                            "summer"
                                                        ]
                                                    }
                                                },
                                                "post_author": {
                                                    "description": "Author of post, only available when submission is not anonymous",
                                                    "type": "string",
                                                    "example": "ahmed-abdelhamed"
                                                },
                                                "is_submission": {
                                                    "description": "Indicates post is a submission (true)",
                                                    "type": "Boolean",
                                                    "example": true
                                                },
                                                "is_anonymous": {
                                                    "description": "Indicates if the  post is a anonymous",
                                                    "type": "Boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/post/delete": {
            "delete": {
                "tags": [
                    "posts"
                ],
                "summary": "delete existing post",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "Number"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts/reblog": {
            "post": {
                "tags": [
                    "posts"
                ],
                "summary": "Reblog existing Post",
                "operationId": "reblog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the ID of the reblogged post",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reblog_key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "comment added to the reblogged post",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "native_inline_images",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "Successfully Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 201
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "Created"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "post/notes": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "getting notes for specific post",
                "description": "This method can be used to get notes for specific post",
                "operationId": "getNotes",
                "parameters": [
                    {
                        "name": "blog-identifier",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "before_timestamp",
                        "in": "query",
                        "description": "Fetch notes created before this timestamp",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "The response formatting mode {all , likes , conversation , rollup ,reblogs_with_tags }",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "Number",
                                        "format": "text",
                                        "example": "1234567890000"
                                    },
                                    "before_timestamp": {
                                        "type": "Number",
                                        "format": "text",
                                        "example": "1234567890"
                                    },
                                    "mode": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "all"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 1235
                                                },
                                                "Users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "notes": {
                                                                "type": "Array"
                                                            },
                                                            "rollup_notes": {
                                                                "type": "Array"
                                                            },
                                                            "total_notes": {
                                                                "type": "Number",
                                                                "example": 125
                                                            },
                                                            "total_likes": {
                                                                "type": "Number",
                                                                "example": 12
                                                            },
                                                            "_links": {
                                                                "type": "Object",
                                                                "example": "http/...."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "user/info": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": " retrieving the userâ€™s account information ",
                "description": "This method can be used to  retrieve the userâ€™s account information that matches the OAuth credentials submitted with the request",
                "operationId": "index",
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "following": {
                                                    "type": "Number",
                                                    "example": 263
                                                },
                                                "default_post_format": {
                                                    "description": "html, markdown, or raw",
                                                    "type": "String",
                                                    "example": "html"
                                                },
                                                "name": {
                                                    "description": "The user's tumblr short name",
                                                    "type": "String",
                                                    "example": "derekg"
                                                },
                                                "likes": {
                                                    "description": "The total count of the user's likes",
                                                    "type": "Number",
                                                    "example": 606
                                                },
                                                "blogs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "description": "the short name of the blog",
                                                                "type": "String",
                                                                "example": "derekg"
                                                            },
                                                            "url": {
                                                                "description": "the URL of the blog",
                                                                "type": "String",
                                                                "example": "https://derekg.org/"
                                                            },
                                                            "title": {
                                                                "description": "the title of the blog",
                                                                "type": "String",
                                                                "example": "Derek Gottfrid"
                                                            },
                                                            "primary": {
                                                                "description": "indicates if this is the user's primary blog",
                                                                "type": "Boolean",
                                                                "example": true
                                                            },
                                                            "followers": {
                                                                "description": "total count of followers for this blog",
                                                                "type": "Number",
                                                                "example": 33004929
                                                            },
                                                            "tweet": {
                                                                "description": "indicate if posts are tweeted auto, Y, N",
                                                                "type": "String",
                                                                "example": "Y"
                                                            },
                                                            "facebook": {
                                                                "description": "indicate if posts are sent to facebook Y, N",
                                                                "type": "String",
                                                                "example": "auto"
                                                            },
                                                            "type": {
                                                                "description": "indicates whether a blog is public or private",
                                                                "type": "String",
                                                                "example": "public"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "user/dashboard": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": " retrieving the userâ€™s dashboard",
                "description": "This method can be used to  retrieve the userâ€™s dashboard that matches the OAuth credentials submitted with the request",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to return: 1â€“20, inclusive",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Post number to start at",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of post to return. Specify one of the following: text, photo, quote, link, chat, audio, video, answer",
                        "required": false,
                        "schema": {
                            "type": "String"
                        }
                    },
                    {
                        "name": "since_id",
                        "in": "query",
                        "description": "Return posts that have appeared after this ID; Use this parameter to page through the results: first get a set of posts, and then get posts since the last ID of the previous set.",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "reblog_info",
                        "in": "query",
                        "description": "Indicates whether to return reblog information (specify true or false). Returns the various reblogged_ fields.",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    },
                    {
                        "name": "notes_info",
                        "in": "query",
                        "description": "Indicates whether to return notes information (specify true or false). Returns note count and note metadata.",
                        "required": false,
                        "schema": {
                            "type": "Boolean"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "blog_name": {
                                                                "type": "string",
                                                                "example": "laughingsquid"
                                                            },
                                                            "id": {
                                                                "type": "Number",
                                                                "example": 6828225215
                                                            },
                                                            "post_url": {
                                                                "type": "string",
                                                                "example": "https:\\/\\/links.laughingsquid.com\\/post\\/6828225215"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "user/likes": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Retrieve a User's Likes",
                "description": "retrieve the posts liked by the user",
                "operationId": "getUserLikes",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "the number of posts to return",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The number of the liked post to start from",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Retrieve posts liked before the specified timestamp",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Retrieve posts liked after the specified timestamp",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "limit": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "offset": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "before": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "after": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "user/following": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Retrieve the Blogs a User Is Following",
                "description": "Used to return the blogs followed by the user, and info about those blogs.",
                "operationId": "getUserFollowing",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "the number of blogs to return",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The number of the post to start from",
                        "required": false,
                        "schema": {
                            "type": "Number"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "limit": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "offset": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "user/filtered_tags": {
            "get": {
                "tags": [
                    "tags"
                ],
                "summary": "Retrieve Tag Filtering",
                "description": "Retrieve a list of currently-filtered tag strings.",
                "operationId": "UserGetFilteredTags",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "filtered_tags": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "tag1": {
                                                        "type": "string",
                                                        "example": "techonolgy"
                                                    },
                                                    "tag2": {
                                                        "type": "string",
                                                        "example": "something"
                                                    },
                                                    "tag3": {
                                                        "type": "string",
                                                        "example": "something else"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "tags"
                ],
                "summary": "Add Tag Filtering",
                "description": "Add one or more tags to filter.",
                "operationId": "UserPostFilterTag",
                "parameters": [
                    {
                        "name": "filtered_tags",
                        "in": "query",
                        "description": "One or more than one tag string to add to your list of filters",
                        "required": true,
                        "schema": {
                            "type": "array of strings"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "filtered_tags"
                                ],
                                "properties": {
                                    "filtered_tags": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "tag1": {
                                                    "type": "string",
                                                    "example": "techonolgy"
                                                },
                                                "tag2": {
                                                    "type": "string",
                                                    "example": "something"
                                                },
                                                "tag3": {
                                                    "type": "string",
                                                    "example": "something else"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "user/filtered_tags/{tag}": {
            "delete": {
                "tags": [
                    "tags"
                ],
                "summary": "Remove Tag Filtering",
                "description": "Remove a tag filter.",
                "operationId": "UserDeleteFilteringTag",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "Tag to stop filtering",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tag"
                                ],
                                "properties": {
                                    "tag": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "football"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "user/filtered_content": {
            "get": {
                "tags": [
                    "tags"
                ],
                "summary": "Retrieve Content Filtering",
                "description": "Retrieve a list of currently-filtered content strings.",
                "operationId": "UserGetFilteredContent",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "": {
                                            "properties": {
                                                "filtered_content": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "tag1_content": {
                                                                "example": "technology"
                                                            },
                                                            "tag2_content": {
                                                                "example": "something"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Add Content Filtering",
                "description": "Add one or more content strings to filter.",
                "operationId": "UserPostFilteringContent",
                "parameters": [
                    {
                        "name": "filtered_content",
                        "in": "query",
                        "description": "One or more than one string to add to your list of filters",
                        "required": true,
                        "schema": {
                            "type": "array of strings"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "filtered_content"
                                ],
                                "properties": {
                                    "filtered_tags": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "tag1": {
                                                    "type": "string",
                                                    "example": "techonolgy"
                                                },
                                                "tag2": {
                                                    "type": "string",
                                                    "example": "something"
                                                },
                                                "tag3": {
                                                    "type": "string",
                                                    "example": "something else"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Remove filtered_content",
                "description": "rRemove a content filter string.",
                "operationId": "UserDeleteFilteringContent",
                "parameters": [
                    {
                        "name": "filtered_content",
                        "in": "path",
                        "description": "Content filter string to remove.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "filtered_content"
                                ],
                                "properties": {
                                    "filtered_content": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "hello_filter"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/{blog-identifier}/notes/delete": {
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "unfollow tag",
                "operationId": "unfollow tag",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "note_tumblelog",
                        "in": "query",
                        "description": "the name of blog containing post",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "blog/{blog-identifier}/subscription": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "subscription a blog",
                "operationId": "subscription",
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Blog"
                ],
                "summary": "subscription a blog",
                "operationId": "Unsubscription",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "{blog-identifier}/add_tags_to_posts": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "add new tag(s) to existing post(s)",
                "operationId": "Add Tags to Posts",
                "parameters": [
                    {
                        "name": "posts_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "tag[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "{blog-identifier}/delete_posts": {
            "delete": {
                "tags": [
                    "posts"
                ],
                "summary": "user can delete one or more posts",
                "operationId": "DeletePosts",
                "parameters": [
                    {
                        "name": "posts_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer/string"
                            }
                        }
                    },
                    {
                        "name": "tags[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "posts_id[]",
                                    "tags[]"
                                ],
                                "properties": {
                                    "posts_id[]": {
                                        "type": "string",
                                        "example": "[1123153153,153151312]"
                                    },
                                    "tags[]": {
                                        "type": "string",
                                        "example": "['winter','153151312']"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "{blog-identifier}/get_tags_for_posts": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "get all tag(s) existing in post(s)",
                "operationId": "get_tags_for_posts",
                "parameters": [
                    {
                        "name": "posts_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string/integer"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "posts_id[]"
                                ],
                                "properties": {
                                    "posts_id[]": {
                                        "type": "string",
                                        "example": "[1123153153,153151312]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "response": {
                                            "properties": {
                                                "number of tags": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "posts_id[]": {
                                                    "type": "string",
                                                    "example": "['summer','sunny','beach'd]"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "{blog-identifier}/remove_tags_from_posts": {
            "delete": {
                "tags": [
                    "Blog"
                ],
                "summary": "remove tag(s) existing in post(s)",
                "operationId": "remove_tags_from_posts",
                "parameters": [
                    {
                        "name": "posts_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string/integer"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "posts_id[]"
                                ],
                                "properties": {
                                    "posts_id[]": {
                                        "type": "string",
                                        "example": "[1123153153,153151312]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "Blog/": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "Create new Blog",
                "description": "User create new Blog ",
                "operationId": "Create",
                "parameters": [
                    {
                        "name": "Title",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "Url",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "Privacy",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "Password",
                        "in": "query",
                        "required": false
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Title"
                                ],
                                "properties": {
                                    "Title": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Summer_Blog"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "example.tumblr.com"
                                    },
                                    "Privacy": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "Password": {
                                        "type": "string",
                                        "format": "Password",
                                        "example": "pass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created Successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Invalid Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Blog url is not available!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Blog"
                ],
                "summary": "Delete Specific Blog",
                "description": "User Delete Specific Blog ",
                "operationId": "Delete",
                "parameters": [
                    {
                        "name": "Email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "Password",
                        "in": "query",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Email",
                                    "Password"
                                ],
                                "properties": {
                                    "Email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "Email@gmail.com"
                                    },
                                    "Password": {
                                        "type": "string",
                                        "format": "Password",
                                        "example": "Password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "That password is incorrect. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "user/follow": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Follow a blog",
                "description": "enable the user to follow a blog using the blog Email or URL",
                "operationId": "UserFollow",
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "the url of the blog to follow",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email of the blog to follow",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url",
                                    "email"
                                ],
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "http://wwww.something.com"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "name@something.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "user/unfollow": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Unfollow a blog",
                "description": "enable the user to Unfollow a blog using the blog URL",
                "operationId": "UserUnfollow",
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "the url of the blog to unfollow",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url"
                                ],
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "http://wwww.something.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "user/like": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Like a Post",
                "description": "enables the user to like a post through the post id",
                "operationId": "UserLike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the post to like",
                        "required": true,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "reblog_key",
                        "in": "query",
                        "description": "The reblog key for the post id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "reblog_key"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "reblog_key": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "hello123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "user/unlike": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Unlike a Post",
                "description": "enables the user to unlike a post through the post id",
                "operationId": "UserUnlike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the post to unlike",
                        "required": true,
                        "schema": {
                            "type": "Number"
                        }
                    },
                    {
                        "name": "reblog_key",
                        "in": "query",
                        "description": "The reblog key for the post id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "reblog_key"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "reblog_key": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "hello123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "user/post/reply": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "add new reply to Specific Post",
                "operationId": "add reply",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reblog_key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reply_text",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "tumblelog",
                        "in": "query",
                        "description": "the name of blog containing post to get if he is the original poster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "201": {
                        "description": "created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "user/tags/add": {
            "post": {
                "tags": [
                    "tags"
                ],
                "summary": "follow new tag",
                "operationId": "follow tag",
                "parameters": [
                    {
                        "name": "tag_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "user/tags/remove": {
            "delete": {
                "tags": [
                    "tags"
                ],
                "summary": "unfollow tag",
                "operationId": "unfollow tag",
                "parameters": [
                    {
                        "name": "tag_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Meta": {
                                            "properties": {
                                                "Status": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "msg": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Projects",
            "description": "API Endpoints of Projects"
        }
    ],
    "security": [
        []
    ]
}